-- I just wanted to see how it is to use current API from YueScript (a MoonScript dialect).
-- I consider YueScript to be Lua without boilerplate.

-- `yue yuemain.yue` `astra run yuemain.lua`
require "globals"
{ :html, :context, :logger, :chain } = require "middleware"

lustache = require "lustache"

read_all = (file) ->
    f = assert(io.open(file, "rb"), tostring(file).." is not found.")
    content = f\read("*all")
    f\close()
    content

favlangs_template = read_all("templates/static/favlangs.html")
rendered_favlangs = lustache\render(favlangs_template, {favourite_languages: "Lua, Elixir, C, Rust"})
tier_list_template = read_all("templates/dynamic/tier-list.html")

server = Astra.http.server\new()

favlangs = () -> rendered_favlangs

tier_list = (req, res) ->
    res\set_header("Content-Type", "text/html")
    q = req\queries()
    params = { name: q.name, s: q.s, a: q.a, b: q.b, c: q.c, d: q.d, e: q.e, f: q.f }
    lustache\render(tier_list_template, params)

homepage_info = { "I'm a homepage" }

homepage = () -> table.concat(homepage_info, "\n")

add_homepage_info = (req, res) ->
    if new_info := req\queries().info
        homepage_info[] = new_info
        "New info added!"
    else
        "Failed to add new info"

just_hi = (request, response) ->
    if name := request\queries().name then "Hello #{name}!" else "Hello!"

Routes(server)
    base_middleware: chain { context, logger }
    * { GET,         "/",       homepage }
    * { POST,        "/",       add_homepage_info }
    * { GET,         "/hi",     just_hi }
    * { STATIC_FILE, "/main",   "main.lua" }
    * { STATIC_DIR,  "/public", "public" }

Routes(server)
    base_middleware: html
    * { GET, "/favlangs",  favlangs }
    * { GET, "/tier-list", logger tier_list }

server\run()

