local lustache = require "lustache"

read_all = (file) ->
    f = assert(io.open(file, "rb"), tostring(file).." is not found.")
    content = f\read("*all")
    f\close()
    content

local server = Astra.http.server\new()

favlangs_template = read_all("templates/static/favlangs.html")
rendered_static_template = lustache\render(favlangs_template, {favourite_languages: "Lua, Elixir, C, Rust"})

server\get "/favlangs", (request, response) ->
    response\set_header("Content-Type", "text/html")
    rendered_static_template

tier_list_template = read_all("templates/dynamic/tier-list.html")

server\get "/tier-list", (req, res) ->
    res\set_header("Content-Type", "text/html")
    q = req\queries()
    params = { name: q.name, s: q.s, a: q.a, b: q.b, c: q.c, d: q.d, e: q.e, f: q.f }
    lustache\render(tier_list_template, params)

server\run()
